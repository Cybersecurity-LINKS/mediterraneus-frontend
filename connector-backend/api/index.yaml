openapi: '3.0.1'
info:
  version: '1.0.0'
  title: 'Connector API'
  description: This document specifies the REST API for the Connector service.
externalDocs:
  description: Github 
  url: https://github.com/Cybersecurity-LINKS/mediterraneus-client-side
servers:
- url: http://localhost:1234
tags:
- name: Identities
  description: Everything about user identities.
- name: Assets
  description: Everything about user assets.
paths:
  #  Identities APIs
  /identities:
    post:
      summary: Creates a user identity.
      tags:
      - Identities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityRequest'
      responses: 
        '201':
          description: Created
  /identities/{ethAddress}:
    parameters:
      - name: eth_address
        description: The unique identifier of the spacecraft
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ethAddress'
    get:
      summary: Read a spacecraft
      tags:
      - Identities
      responses:
        200:
          description: The spacecraft corresponding to the provided `ethAddress`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spacecraft'
        404:
          description: No spacecraft found for the provided `ethAddress`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /identities/{ethAddress}/sign-data:
    post:
      summary: Creates a user identity.
      tags:
      - Identities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityRequest'
      responses: 
        '201':
          description: Created
  /identities/{ethAddress}/gen-presentation:
    post:
      summary: Creates a user identity.
      tags:
      - Identities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityRequest'
      responses: 
        '201':
          description: Created
  # Assets APIs
  /assets:
    post:
      summary: Upload an asset of the user
      tags:
      - Assets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityRequest'
      responses: 
        '201':
          description: Created
    get:
      summary: Upload an asset of the user
      tags:
      - Assets
      responses: 
        '201':
          description: Created
  /assets/{assetId}:
    parameters:
      - name: assetId
        description: The unique identifier of the asset
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/assetId'
    get:
      summary: Upload an asset of the user
      tags:
      - Assets
      responses: 
        '201':
          description: Created
    patch:
      summary: Upload an asset of the user
      tags:
      - Assets
      responses: 
        '201':
          description: Created
  /assets/{assetId}/challenge:
    parameters:
      - name: assetId
        description: The unique identifier of the asset
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/assetId'
    get:
      summary: Upload an asset of the user
      tags:
      - Assets
      responses: 
        '201':
          description: Created
  /assets/{assetId}/download:
    parameters:
        - name: assetId
          description: The unique identifier of the asset
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/assetId'
    post:
      summary: Upload an asset of the user
      tags:
      - Assets
      responses: 
        '201':
          description: Created
components:
  schemas:
    ethAddress:
      description: The unique identifier of a spacecraft
      type: string
    assetId:
      description: The unique identifier of an asset
      type: string
    Spacecraft:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          $ref: '#/components/schemas/ethAddress'
        name:
          type: string
        type:
          type: string
          enum:
            - capsule
            - probe
            - satellite
            - spaceplane
            - station
        description:
          type: string
    IdentityRequest:
      type: object
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: []